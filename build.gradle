/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'me.champeau.jmh' version '0.7.0'
}




repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = 'gradleexample'
version = '1.0.0'


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    testImplementation 'org.openjdk.jmh:jmh-core:1.36'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.36'

    jmh 'commons-io:commons-io:2.4'

    jmh 'org.openjdk.jmh:jmh-core:1.36'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.36'

    jmhAnnotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.36'
    jmhImplementation sourceSets.main.output
    jmhImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.36'

    implementation 'com.google.guava:guava:31.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'gradleexample.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


java {
    sourceCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    if (it.name != 'compileJmhJava') {
        options.compilerArgs << '-proc:none'
    }
}


classes.finalizedBy(jmhClasses)


tasks.register('hello') {
    doLast {
        println 'hello world'
    }
}